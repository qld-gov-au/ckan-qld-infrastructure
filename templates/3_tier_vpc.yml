AWSTemplateFormatVersion: '2010-09-09'
Outputs:
  GIWebSubnetA:
    Value: !Ref WebSubnetA
    Export:
       Name: !Sub "${Environment}${ApplicationName}WebSubnetA"
  GIWebSubnetB:
    Value: !Ref WebSubnetB
    Export:
       Name: !Sub "${Environment}${ApplicationName}WebSubnetB"
  GIAppSubnetA:
    Value: !Ref AppSubnetA
    Export:
       Name: !Sub "${Environment}${ApplicationName}AppSubnetA"
  GIAppSubnetB:
    Value: !Ref AppSubnetB
    Export:
       Name: !Sub "${Environment}${ApplicationName}AppSubnetB"
  GIDBSubnetA:
    Value: !Ref DataSubnetA
    Export:
       Name: !Sub "${Environment}${ApplicationName}DBSubnetA"
  GIDBSubnetB:
    Value: !Ref DataSubnetB
    Export:
       Name: !Sub "${Environment}${ApplicationName}DBSubnetB"
  VPCId:
    Value: !Ref VPC
    Export:
       Name: !Sub "${VPCNamePrefix}Vpc-${Environment}"
  VPCPeeringEnabled:
     Value: !Ref VPCPeeringEnabled
     Export:
       Name: !Sub "${ApplicationName}-${Environment}-VPCPeeringEnabled"
Conditions:
  IsVPCPeeringEnabled:
    Fn::Equals:
      - Ref: VPCPeeringEnabled
      - 'true'
  NatGateways:
    Fn::Equals:
      - Ref: NatGateways
      - 'true'
  2PlusAZs:
    Fn::Or:
    - Fn::Equals:
      - Ref: AZCount
      - '2'
    - Fn::Equals:
      - Ref: AZCount
      - '3'
    - Fn::Equals:
      - Ref: AZCount
      - '4'
    - Fn::Equals:
      - Ref: AZCount
      - '5'
  3PlusAZs:
    Fn::Or:
    - Fn::Equals:
      - Ref: AZCount
      - '3'
    - Fn::Equals:
      - Ref: AZCount
      - '4'
    - Fn::Equals:
      - Ref: AZCount
      - '5'
  4PlusAZs:
    Fn::Or:
    - Fn::Equals:
      - Ref: AZCount
      - '4'
    - Fn::Equals:
      - Ref: AZCount
      - '5'
  5PlusAZs:
    Fn::Equals:
    - Ref: AZCount
    - '5'
Description: VPC Network
Parameters:
  ApplicationName:
    Description: Name of the application (ie. GI or Services, etc)
    Type: String
  AZCount:
    Description: The number of Availability Zones that the VPC is to span.
    Type: String
  BambooAgentIp:
    Description: The local Bamboo agent ip
    Type: String
  BambooAgentIp2:
    Description: The local Bamboo agent ip
    Type: String
  Environment:
    Description: Platform environment (e.g. PROD, POC, DEV).
    Type: String
  NatGateways:
    Description: Whether to provision nat gateways for private outbound routes
    Type: String
  VPCNamePrefix:
    Description: Name of the VPC.
    Type: String
  VPCPrefix:
    AllowedPattern: '[0-9]+\..+'
    Description: VPC Network Prefix (first two octets ONLY).
    Type: String
  VPCPeeringEnabled:
    Description: VPC Enabled or not ('true', 'false').
    Type: String
  VPCPeeringCidr:
    Description: VPC Peering Network CIDR
    Type: String
  VPCPeeringID:
    Description: EC2 VPC Peering ID
    Type: String
Resources:
  AppNACL:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: Environment
            - App_Tier
      VpcId:
        Ref: VPC
    Type: AWS::EC2::NetworkAcl
  AppSubnetA:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 10.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - App-A
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  AppSubnetANACLAssociation:
    Properties:
      NetworkAclId:
        Ref: AppNACL
      SubnetId:
        Ref: AppSubnetA
    Type: AWS::EC2::SubnetNetworkAclAssociation
  AppSubnetARouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: AppSubnetA
    Type: AWS::EC2::SubnetRouteTableAssociation
  AppSubnetB:
    Condition: 2PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 11.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - App-B
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  AppSubnetBNACLAssociation:
    Condition: 2PlusAZs
    Properties:
      NetworkAclId:
        Ref: AppNACL
      SubnetId:
        Ref: AppSubnetB
    Type: AWS::EC2::SubnetNetworkAclAssociation
  AppSubnetBRouteTableAssociation:
    Condition: 2PlusAZs
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: AppSubnetB
    Type: AWS::EC2::SubnetRouteTableAssociation
  AppSubnetC:
    Condition: 3PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 2
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 12.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - App-C
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  AppSubnetCNACLAssociation:
    Condition: 3PlusAZs
    Properties:
      NetworkAclId:
        Ref: AppNACL
      SubnetId:
        Ref: AppSubnetC
    Type: AWS::EC2::SubnetNetworkAclAssociation
  AppSubnetCRouteTableAssociation:
    Condition: 3PlusAZs
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: AppSubnetC
    Type: AWS::EC2::SubnetRouteTableAssociation
  AppSubnetD:
    Condition: 4PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 3
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 13.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - App-D
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  AppSubnetDNACLAssociation:
    Condition: 4PlusAZs
    Properties:
      NetworkAclId:
        Ref: AppNACL
      SubnetId:
        Ref: AppSubnetD
    Type: AWS::EC2::SubnetNetworkAclAssociation
  AppSubnetDRouteTableAssociation:
    Condition: 4PlusAZs
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: AppSubnetD
    Type: AWS::EC2::SubnetRouteTableAssociation
  AppSubnetE:
    Condition: 5PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 4
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 14.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - App-E
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  AppSubnetENACLAssociation:
    Condition: 4PlusAZs
    Properties:
      NetworkAclId:
        Ref: AppNACL
      SubnetId:
        Ref: AppSubnetE
    Type: AWS::EC2::SubnetNetworkAclAssociation
  AppSubnetERouteTableAssociation:
    Condition: 5PlusAZs
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: AppSubnetE
    Type: AWS::EC2::SubnetRouteTableAssociation
  AttachGateway:
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
    Type: AWS::EC2::VPCGatewayAttachment
  DataNACL:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: Environment
            - Data_Tier
      VpcId:
        Ref: VPC
    Type: AWS::EC2::NetworkAcl
  DataSubnetA:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 20.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Data-A
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  DataSubnetANACLAssociation:
    Properties:
      NetworkAclId:
        Ref: DataNACL
      SubnetId:
        Ref: DataSubnetA
    Type: AWS::EC2::SubnetNetworkAclAssociation
  DataSubnetARouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: DataSubnetA
    Type: AWS::EC2::SubnetRouteTableAssociation
  DataSubnetB:
    Condition: 2PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 21.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Data-B
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  DataSubnetBNACLAssociation:
    Condition: 2PlusAZs
    Properties:
      NetworkAclId:
        Ref: DataNACL
      SubnetId:
        Ref: DataSubnetB
    Type: AWS::EC2::SubnetNetworkAclAssociation
  DataSubnetBRouteTableAssociation:
    Condition: 2PlusAZs
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: DataSubnetB
    Type: AWS::EC2::SubnetRouteTableAssociation
  DataSubnetC:
    Condition: 3PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 2
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 22.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Data-C
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  DataSubnetCNACLAssociation:
    Condition: 3PlusAZs
    Properties:
      NetworkAclId:
        Ref: DataNACL
      SubnetId:
        Ref: DataSubnetC
    Type: AWS::EC2::SubnetNetworkAclAssociation
  DataSubnetCRouteTableAssociation:
    Condition: 3PlusAZs
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: DataSubnetC
    Type: AWS::EC2::SubnetRouteTableAssociation
  DataSubnetD:
    Condition: 4PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 3
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 23.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Data-D
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  DataSubnetDNACLAssociation:
    Condition: 4PlusAZs
    Properties:
      NetworkAclId:
        Ref: DataNACL
      SubnetId:
        Ref: DataSubnetD
    Type: AWS::EC2::SubnetNetworkAclAssociation
  DataSubnetDRouteTableAssociation:
    Condition: 4PlusAZs
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: DataSubnetD
    Type: AWS::EC2::SubnetRouteTableAssociation
  DataSubnetE:
    Condition: 5PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 4
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 24.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Data-E
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  DataSubnetENACLAssociation:
    Condition: 5PlusAZs
    Properties:
      NetworkAclId:
        Ref: DataNACL
      SubnetId:
        Ref: DataSubnetE
    Type: AWS::EC2::SubnetNetworkAclAssociation
  DataSubnetERouteTableAssociation:
    Condition: 5PlusAZs
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: DataSubnetE
    Type: AWS::EC2::SubnetRouteTableAssociation
  InternetGateway:
    Properties:
      Tags:
      - Key: Name
        Value: !Sub "${VPCNamePrefix}Vpc-${Environment}-IGW"
    Type: AWS::EC2::InternetGateway
  NATGateway:
    Condition: NatGateways
    DependsOn:
    - NATGatewayEIP
    - WebSubnetA
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NATGatewayEIP
        - AllocationId
      SubnetId:
        Ref: WebSubnetA
    Type: AWS::EC2::NatGateway
  NATGatewayEIP:
    Condition: NatGateways
    DependsOn: VPC
    Properties:
      Domain: VPC
    Type: AWS::EC2::EIP
  PermitAnyFromData:
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      NetworkAclId:
        Ref: AppNACL
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
    Type: AWS::EC2::NetworkAclEntry
  PermitAnyFromMgmt:
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      NetworkAclId:
        Ref: DataNACL
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
    Type: AWS::EC2::NetworkAclEntry
  PermitAnyFromWeb:
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      NetworkAclId:
        Ref: WebNACL
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
    Type: AWS::EC2::NetworkAclEntry
  PermitAnyToData:
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: AppNACL
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
    Type: AWS::EC2::NetworkAclEntry
  PermitAnyToMgmt:
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: DataNACL
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
    Type: AWS::EC2::NetworkAclEntry
  PermitAnyToWeb:
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: WebNACL
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
    Type: AWS::EC2::NetworkAclEntry
  PrivateNATGatewayRoute:
    Condition: NatGateways
    DependsOn: NATGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGateway
      RouteTableId:
        Ref: PrivateRouteTable
    Type: AWS::EC2::Route
  PrivateOpsRoute:
    Condition: IsVPCPeeringEnabled
    Properties:
      DestinationCidrBlock: !Ref VPCPeeringCidr
      VpcPeeringConnectionId: !Ref VPCPeeringID
      RouteTableId: !Ref PrivateRouteTable
    Type: AWS::EC2::Route
  BambooAgentRoute:
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: !Ref BambooAgentIp
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PrivateRouteTable
    Type: AWS::EC2::Route
  BambooAgentRoute2:
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: !Ref BambooAgentIp2
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PrivateRouteTable
    Type: AWS::EC2::Route
  PrivateRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value: !Sub "${VPCNamePrefix}Vpc-${Environment}-PrivateRoutes"
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PublicDefaultRoute:
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable
    Type: AWS::EC2::Route
  PublicOpsRoute:
    Condition: IsVPCPeeringEnabled
    Properties:
      DestinationCidrBlock: !Ref VPCPeeringCidr
      VpcPeeringConnectionId: !Ref VPCPeeringID
      RouteTableId: !Ref PublicRouteTable
    Type: AWS::EC2::Route
  PublicRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value: !Sub "${VPCNamePrefix}Vpc-${Environment}-PublicRoutes"
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  VPC:
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 0.0/16
      Tags:
      - Key: Name
        Value: !Sub "${VPCNamePrefix}-${Environment}"
    Type: AWS::EC2::VPC
  WebNACL:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: Environment
            - Web_Tier
      VpcId:
        Ref: VPC
    Type: AWS::EC2::NetworkAcl
  WebSubnetA:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 0.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Web-A
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  WebSubnetANACLAssociation:
    Properties:
      NetworkAclId:
        Ref: WebNACL
      SubnetId:
        Ref: WebSubnetA
    Type: AWS::EC2::SubnetNetworkAclAssociation
  WebSubnetARouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: WebSubnetA
    Type: AWS::EC2::SubnetRouteTableAssociation
  WebSubnetB:
    Condition: 2PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 1.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Web-B
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  WebSubnetBNACLAssociation:
    Condition: 2PlusAZs
    Properties:
      NetworkAclId:
        Ref: WebNACL
      SubnetId:
        Ref: WebSubnetB
    Type: AWS::EC2::SubnetNetworkAclAssociation
  WebSubnetBRouteTableAssociation:
    Condition: 2PlusAZs
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: WebSubnetB
    Type: AWS::EC2::SubnetRouteTableAssociation
  WebSubnetC:
    Condition: 3PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 2
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 2.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Web-C
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  WebSubnetCNACLAssociation:
    Condition: 3PlusAZs
    Properties:
      NetworkAclId:
        Ref: WebNACL
      SubnetId:
        Ref: WebSubnetC
    Type: AWS::EC2::SubnetNetworkAclAssociation
  WebSubnetCRouteTableAssociation:
    Condition: 3PlusAZs
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: WebSubnetC
    Type: AWS::EC2::SubnetRouteTableAssociation
  WebSubnetD:
    Condition: 4PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 3
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 3.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Web-D
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  WebSubnetDNACLAssociation:
    Condition: 4PlusAZs
    Properties:
      NetworkAclId:
        Ref: WebNACL
      SubnetId:
        Ref: WebSubnetD
    Type: AWS::EC2::SubnetNetworkAclAssociation
  WebSubnetDRouteTableAssociation:
    Condition: 4PlusAZs
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: WebSubnetD
    Type: AWS::EC2::SubnetRouteTableAssociation
  WebSubnetE:
    Condition: 5PlusAZs
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 4
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::Join:
        - .
        - - Ref: VPCPrefix
          - 4.0/24
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ': '
          - - Ref: Environment
            - Web-E
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  WebSubnetENACLAssociation:
    Condition: 5PlusAZs
    Properties:
      NetworkAclId:
        Ref: WebNACL
      SubnetId:
        Ref: WebSubnetE
    Type: AWS::EC2::SubnetNetworkAclAssociation
  WebSubnetERouteTableAssociation:
    Condition: 5PlusAZs
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: WebSubnetE
    Type: AWS::EC2::SubnetRouteTableAssociation
  S3Endpoint:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      PolicyDocument: {
        "Version":"2012-10-17",
        "Statement":[{
          "Effect":"Allow",
          "Principal": "*",
          "Action":["s3:*"],
          "Resource":["arn:aws:s3:::*/*"]
        }]
      }
      RouteTableIds:
        - !Ref PrivateRouteTable
        - !Ref PublicRouteTable
      ServiceName: !Join ['', [com.amazonaws., !Ref 'AWS::Region', .s3]]
      VpcId: !Ref VPC
