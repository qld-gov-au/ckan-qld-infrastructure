Description: Cloudfront Distribution for fronting an application.
Parameters:
  ACMCertificateARN:
    Description: ARN for certificate to be used by CloudFront
    Type: String
  Domain:
    Description: Domain pointing to EC2 load balancer
    Type: CommaDelimitedList
  WebOrigin:
    Description: Platform ELB
    Type: String
  CmsOrigin:
    Description: CMS cname
    Type: String
  Environment:
    Description: Platform environment
    Type: String
  Platform:
    Description: Name of the platform ie GI, Services, Static,etc
    Type: String
  LogBucketName:
    Description: Name of the S3 logging bucket.
    Type: String
  WebACLId:
    Description: WAF web ACL Id .
    Type: String

Conditions:
  hasCmsOrigin:
    !Not [ !Equals [ !Ref CmsOrigin , '']]
  noCmsOrigin:
    !Equals [ !Ref CmsOrigin, '']

Resources:
  #This is publications once CMS is enabled. (don't forget to keep the one below updated (except for CmsOrigin bits)
  DistributionConfig:
    Condition: noCmsOrigin
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: !Ref Domain
        CacheBehaviors:
          - PathPattern: /assets/*
            Compress: true
            ForwardedValues:
              QueryString: true
            TargetOriginId: 'WebOrigin'
            MinTTL: 1800
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /dataset/*/resource/*/download/*
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: true
            TargetOriginId: 'WebOrigin'
            MinTTL: 120
            ViewerProtocolPolicy: allow-all
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - POST
            - DELETE
            - OPTIONS
            - PUT
            - PATCH
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: all
            QueryString: 'true'
            Headers:
              - "*"
          TargetOriginId: 'WebOrigin'
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: /
        Enabled: true
        Logging:
          Bucket: !Sub "${LogBucketName}.s3.amazonaws.com"
          IncludeCookies: true
          Prefix: !Sub "cloudfront-logs/${Platform}/${Environment}/"
        Origins:
          - DomainName:
              Fn::ImportValue: !Ref WebOrigin
            Id: 'WebOrigin'
            CustomOriginConfig:
              OriginProtocolPolicy: "match-viewer"      # required, accepts http-only, match-viewer, https-only
        PriceClass: PriceClass_All
        WebACLId:
          Fn::ImportValue: !Ref WebACLId
        HttpVersion: 'http2'
        #IsIPV6Enabled: 'true'
        ViewerCertificate:
          AcmCertificateArn:
            Ref: ACMCertificateARN
          SslSupportMethod: sni-only
        Comment:
          Fn::Sub:
            - "${Environment}-${Platform} ${Domain}"
            - Domain:
                Fn::Select:
                  - 0
                  - !Ref Domain

  #this is data with cms details. (don't forget to keep the one above updated (except for CmsOrigin bits)
  DistributionConfig:
    Condition: hasCmsOrigin
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: !Ref Domain
        CacheBehaviors:
          - PathPattern: /assets/*
            Compress: true
            ForwardedValues:
              QueryString: true
            TargetOriginId: 'WebOrigin'
            MinTTL: 1800
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /dataset/*/resource/*/download/*
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: true
            TargetOriginId: 'WebOrigin'
            MinTTL: 120
            ViewerProtocolPolicy: allow-all
          #This is CMS behaviours below
          - PathPattern: /
            TargetOriginId: 'CmsOrigin'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: true
              Headers:
                - "*"
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /index.html
            TargetOriginId: 'CmsOrigin'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: true
              Headers:
                - "*"
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /__data/*
            TargetOriginId: 'CmsOrigin'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: true
              Headers:
                - "*"
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /_admin/*
            TargetOriginId: 'CmsOrigin'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: true
              Headers:
                - "*"
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /_edit/*
            TargetOriginId: 'CmsOrigin'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: true
              Headers:
                - "*"
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /article/*
            TargetOriginId: 'CmsOrigin'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: true
              Headers:
                - "*"
            ViewerProtocolPolicy: redirect-to-https
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - POST
          - DELETE
          - OPTIONS
          - PUT
          - PATCH
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: all
            QueryString: 'true'
            Headers:
             - "*"
          TargetOriginId: 'WebOrigin'
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: /
        Enabled: true
        Logging:
          Bucket: !Sub "${LogBucketName}.s3.amazonaws.com"
          IncludeCookies: true
          Prefix: !Sub "cloudfront-logs/${Platform}/${Environment}/"
        Origins:
        - DomainName:
            Fn::ImportValue: !Ref WebOrigin
          Id: 'WebOrigin'
          CustomOriginConfig:
            OriginProtocolPolicy: "match-viewer"      # required, accepts http-only, match-viewer, https-only
        - DomainName:
            !Ref CmsOrigin
          Id: 'CmsOrigin'
          CustomOriginConfig:
            OriginProtocolPolicy: "match-viewer"      # required, accepts http-only, match-viewer, https-only
        PriceClass: PriceClass_All
        WebACLId:
          Fn::ImportValue: !Ref WebACLId
        HttpVersion: 'http2'
        #IsIPV6Enabled: 'true'
        ViewerCertificate:
          AcmCertificateArn:
            Ref: ACMCertificateARN
          SslSupportMethod: sni-only
        Comment:
          Fn::Sub:
            - "${Environment}-${Platform} ${Domain}"
            - Domain:
                Fn::Select:
                  - 0
                  - !Ref Domain

Outputs:
  CloudfrontAliasDNSName:
    Value:
      Fn::GetAtt:
      - DistributionConfig
      - DomainName
    Export:
      Name:
        Fn::Join:
          - ""
          - - !Ref Environment
            - !Ref Platform
            - "CloudfrontAliasDNSName"

  CloudfrontAliasHostedZoneID:
    Value: "Z2FDTNDATAQYW2" # All CloudFront distributions are in this zone, see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html
    Export:
      Name:
        Fn::Join:
          - ""
          - - !Ref Environment
            - !Ref Platform
            - "CloudfrontAliasHostedZoneID"

  AwsAccount:
    Value: !Ref "AWS::AccountId"
