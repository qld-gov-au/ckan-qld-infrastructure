---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates instances for OpsWorks CKAN NFS Stack.'

Parameters:
  ApplicationId:
    Description: All-lowercase identifier for the application (eg 'gi', 'services', etc)
    Type: String
    ConstraintDescription: Must contain only lowercase/numeric/hyphen/underscore.
    AllowedPattern: '[-_a-z0-9]*'
  Environment:
    Description: Select a stack version.
    Type: String
    Default: STAGING
    AllowedValues:
      - DEV
      - TRAINING
      - STAGING
      - PROD
  ServicesEC2Size:
    Description: Select EC2 Instance Size.
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - m3.medium
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m4.10xlarge
      - m5.12xlarge
  WebEC2Size:
    Description: Select EC2 Instance Size.
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - m3.medium
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m4.10xlarge
      - m5.12xlarge
  EnableDataStore:
    Description: Whether or not to support the DataStore.
    Type: String
    Default: "yes"
    AllowedValues:
      - "yes"
      - "no"
  WebEC2Count:
    Description: The number of EC2 instances to create in the web layer.
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 2
  OpsWorksStackID:
    Description: The exported name of the OpsWorks Stack ID.
    Type: String
  SolrLayerID:
    Description: The exported name of the OpsWorks Solr Stack Layer ID.
    Type: String
  WebLayerID:
    Description: The exported name of the OpsWorks Web Stack Layer ID.
    Type: String
  AppSubnets:
    Description: The base name for the exported application layer subnet IDs, eg if the exports are 'PRODMyApplicationAppSubnetA' and 'PRODMyApplicationAppSubnetB', then this would be 'PRODMyApplicationAppSubnet'. Only needed for HA configurations.
    Type: String
    Default: none

Conditions:
  2PlusWebInstances:
    Fn::Equals:
      - 2
      - !Ref WebEC2Count

Resources:
  OpswxEC2Services1:
    Type: AWS::OpsWorks::Instance
    Properties:
{% if item.tags["PowerManaged"] == "Yes" %}
      AutoScalingType: timer
      # Monday-Friday 06:00-20:00 GMT+10
      TimeBasedAutoScaling:
        Sunday:
{% for hour in range(20, 24) %}
          "{{ hour }}": "on"
{% endfor %}

{% for day in ["Monday","Tuesday","Wednesday","Thursday"] %}
        {{ day }}:
{% for hour in range(0, 10) %}
          "{{ hour }}": "on"
{% endfor %}
{% for hour in range(20, 24) %}
          "{{ hour }}": "on"
{% endfor %}
{% endfor %}

        Friday:
{% for hour in range(0, 10) %}
          "{{ hour }}": "on"
{% endfor %}
{% endif %}
      RootDeviceType: ebs
      InstallUpdatesOnBoot: true
      InstanceType: !Ref ServicesEC2Size
      LayerIds:
        - Fn::ImportValue: !Ref SolrLayerID
      StackId:
        Fn::ImportValue: !Ref OpsWorksStackID

  OpswxEC2Web1:
    Type: AWS::OpsWorks::Instance
    DependsOn:
      - OpswxEC2Services1
    Properties:
{% if item.tags["PowerManaged"] == "Yes" %}
      AutoScalingType: timer
      # Monday-Friday 06:00-20:00 GMT+10
      TimeBasedAutoScaling:
        Sunday:
{% for hour in range(20, 24) %}
          "{{ hour }}": "on"
{% endfor %}

{% for day in ["Monday","Tuesday","Wednesday","Thursday"] %}
        {{ day }}:
{% for hour in range(0, 10) %}
          "{{ hour }}": "on"
{% endfor %}
{% for hour in range(20, 24) %}
          "{{ hour }}": "on"
{% endfor %}
{% endfor %}

        Friday:
{% for hour in range(0, 10) %}
          "{{ hour }}": "on"
{% endfor %}
{% endif %}
      Hostname: !Sub "${ApplicationId}-web1"
      RootDeviceType: ebs
      InstallUpdatesOnBoot: true
      InstanceType: !Ref WebEC2Size
      LayerIds:
        - Fn::ImportValue: !Ref WebLayerID
      StackId:
        Fn::ImportValue: !Ref OpsWorksStackID

  OpswxEC2Web2:
    Condition: 2PlusWebInstances
    Type: AWS::OpsWorks::Instance
    Properties:
{% if item.tags["PowerManaged"] == "Yes" %}
      AutoScalingType: timer
      # Monday-Friday 06:00-20:00 GMT+10
      TimeBasedAutoScaling:
        Sunday:
{% for hour in range(20, 24) %}
          "{{ hour }}": "on"
{% endfor %}

{% for day in ["Monday","Tuesday","Wednesday","Thursday"] %}
        {{ day }}:
{% for hour in range(0, 10) %}
          "{{ hour }}": "on"
{% endfor %}
{% for hour in range(20, 24) %}
          "{{ hour }}": "on"
{% endfor %}
{% endfor %}

        Friday:
{% for hour in range(0, 10) %}
          "{{ hour }}": "on"
{% endfor %}
{% endif %}
      Hostname: !Sub "${ApplicationId}-web2"
      RootDeviceType: ebs
      InstallUpdatesOnBoot: true
      InstanceType: !Ref WebEC2Size
      SubnetId:
        Fn::ImportValue: !Sub "${AppSubnets}C"
      LayerIds:
        - Fn::ImportValue: !Ref WebLayerID
      StackId:
        Fn::ImportValue: !Ref OpsWorksStackID

  OpswxEC2Web3:
    Type: AWS::OpsWorks::Instance
    Properties:
      AutoScalingType: load
      Hostname: !Sub "${ApplicationId}-web1a"
      RootDeviceType: ebs
      InstallUpdatesOnBoot: true
      InstanceType: !Ref WebEC2Size
      LayerIds:
        - Fn::ImportValue: !Ref WebLayerID
      StackId:
        Fn::ImportValue: !Ref OpsWorksStackID

  OpswxEC2Web4:
    Condition: 2PlusWebInstances
    Type: AWS::OpsWorks::Instance
    DependsOn:
      - OpswxEC2Web3
    Properties:
      AutoScalingType: load
      Hostname: !Sub "${ApplicationId}-web2a"
      RootDeviceType: ebs
      InstallUpdatesOnBoot: true
      InstanceType: !Ref WebEC2Size
      SubnetId:
        Fn::ImportValue: !Sub "${AppSubnets}C"
      LayerIds:
        - Fn::ImportValue: !Ref WebLayerID
      StackId:
        Fn::ImportValue: !Ref OpsWorksStackID
