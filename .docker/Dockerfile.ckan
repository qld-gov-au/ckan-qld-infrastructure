FROM amazeeio/python:2.7-ckan-21.5.0

ENV WORKDIR=/app

ARG SITE_URL
ARG VARS_TYPE
ARG DEPLOY_ENV
ENV SITE_URL="${SITE_URL}"
ENV DEPLOY_ENV="${DEPLOY_ENV}"
ENV APP_DIR=/app/ckan/default
ENV CKAN_INI=/app/ckan/default/production.ini

ENV DOCKERIZE_VERSION v0.6.1
RUN apk add --no-cache curl && curl -s -L -O https://github.com/jwilder/dockerize/releases/download/${DOCKERIZE_VERSION}/dockerize-alpine-linux-amd64-${DOCKERIZE_VERSION}.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-${DOCKERIZE_VERSION}.tar.gz \
    && rm dockerize-alpine-linux-amd64-${DOCKERIZE_VERSION}.tar.gz

# Install CKAN.
ENV CKAN_VERSION 2.8.8
RUN . ${APP_DIR}/bin/activate \
    && cd ${APP_DIR} \
    && pip install setuptools==36.1 \
    && pip install -e "git+https://github.com/ckan/ckan.git@ckan-${CKAN_VERSION}#egg=ckan" \
    && sed -i "s/psycopg2==2.4.5/psycopg2==2.7.7/g" "${APP_DIR}/src/ckan/requirements.txt" \
    && pip install -r "${APP_DIR}/src/ckan/requirements.txt" \
    && ln -s "${APP_DIR}/src/ckan/who.ini" "${APP_DIR}/who.ini" \
    && deactivate \
    && ln -s /app/ckan /usr/lib/ckan

COPY .docker/test-$VARS_TYPE.ini /app/ckan/default/production.ini

COPY .docker/scripts /app/scripts

COPY vars/shared-$VARS_TYPE.var.yml /app/scripts/extensions.yml

RUN fix-permissions /app/ckan \
    && chmod +x /app/scripts/*.sh

# Add current extension and files.
#COPY ckanext /app/ckanext #this is all in one project pulling in all requirements dev files, there is no ckanext in this project
COPY requirements.txt requirements-dev.txt /app/

# Init current extension.
RUN /app/scripts/init-ext.sh

ENTRYPOINT ["/sbin/tini", "--", "/lagoon/entrypoints.sh"]
CMD ["/app/scripts/serve.sh"]
