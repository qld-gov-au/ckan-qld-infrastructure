---
- name: Cloudformation Playbook
  hosts: local
  connection: local

  pre_tasks:
    - name: get basic_facts
      set_fact:
        basic_fact={{ item }}
#        CKANSource={{ item.CKANSource }}
      when: item.Environment == Environment
      with_items: "{{ basic_facts }}"

    - name: set facts to environment from basic_fact
      set_fact: "{{ item.key }}={{ item.value }}"
      with_dict: "{{ basic_fact }}"
      when: basic_fact is defined

    - set_fact:
        acm_stack_name: "{{ service_name }}-{{ Environment }}-acm"

    - name: Describe acm cert cloudformation stack in default region
      cloudformation_facts:
        region: "{{ region }}"
        stack_name: "{{ acm_stack_name }}"
        stack_resources: true
      register: acm

    - set_fact:
        ACMCertificateARNForDefaultRegion: "{{ acm.ansible_facts.cloudformation[acm_stack_name].stack_outputs.AcmCert }}"

    - name: kms alias fact
      aws_kms_facts:
        filters:
          alias: "aws/ssm"
        region: "{{ region }}"
      register: ssmKeyFacts

    - debug:
        msg: "{{ ssmKeyFacts }}"

    - name: set KMS key from alias
      set_fact:
        SSMKey: "{{ ssmKeyFacts['keys'][0].key_arn }}"

    - include_vars: vars/CKAN-Stack.var.yml
  roles:
    - ansible_cloudformation

  tasks:

    - name: Get stack params
      set_fact:
        stack_name: "{{ item.name }}"
      when: item.template_parameters.Environment == Environment
      with_items: "{{ cloudformation_stacks }}"

    - name: Get current stack facts
      cloudformation_facts:
        region: "{{ region }}"
        stack_name: "{{ stack_name }}"
        stack_resources: true
      register: opsworks_facts

    - name: Enable CloudWatch Logs on OpsWorks web layer
      command: "aws opsworks update-layer --region us-east-1 --layer-id '{{opsworks_facts.ansible_facts.cloudformation[stack_name].stack_outputs.WebLayer}}' --cloud-watch-logs-configuration 'Enabled=true,LogStreams=[{LogGroupName=ckan-worker,File=/var/log/ckan/*.log}]'"
